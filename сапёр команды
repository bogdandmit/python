import random
from tkinter import *
window=Tk()
window.title("Сапер")
window.geometry('400x250')
# массив поля, * — пустое поле, # — стена
pole = [["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"]]
def mina():
    for i in range(30):
        pole[random.randint(0,11)][random.randint(0,11)]="#"
c= Canvas(window, width=1000,height=1000,bg="red")
c.pack()
for i in range(len (pole)):
    for z in range(len(pole)):
        button1=Button(c,command="",width=6,height=3)
        button1.place(x=i*50,y=z*50)
        #button1.place(x=10,y=z*75)
# то, что будет выводиться на экран
vidimost_polya=[["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"]]

# вывод поля на экран, для любого, абстрактного списка будет работать


def vyvodPolya(vidimost_polya):
    for stroka in vidimost_polya:
        for kletka in stroka:
            print(kletka,end='')
        print()
        
        
        
# проверка поля на то, что внутри него
# если поле пустое, проверяются все клетки вокруг него
# если стена — не проверяются
# если поле уже было открыто — оно не проверяется

            
            
def check(stroka,stolb):
    stroka=int(stroka)
    stolb=int(stolb)
    # если клетка ещё не открыта
    if vidimost_polya[stroka-1][stolb-1] == "•":
        # открываем
        vidimost_polya[stroka-1][stolb-1] = pole[stroka-1][stolb-1]
        # если оно оказалось пустым
        if pole[stroka-1][stolb-1] == "*":
            # проверяем все соседние, только если они существуют
            # а то выйдем за пределы поля, Python ругать будет
            # клетка сверху
            if stroka-1 > 0:
                check(stroka-1,stolb)
                # клетка сверху слева
                if stolb-1 > 0:
                    check(stroka-1,stolb-1)
                # клетка сверху справа
                if stolb+1 < len(pole):
                    check(stroka-1,stolb+1)
            # клетка снизу        
            if stroka < len(pole):
                check(stroka+1,stolb)
                # клетка слева снизу
                if stolb-1 > 0:
                    check(stroka+1,stolb-1)
                # клетка справа снизу
                if stolb+1 < len(pole):
                    check(stroka+1,stolb+1)
            # клетка слева
            if stolb-1 > 0:
                check(stroka,stolb-1)
            # клетка справа
            if stolb+1 < len(pole):
                check(stroka,stolb+1)

def prov_min(stroka,stolb):
    if pole[stroka-1][stolb-1] == "#":
        print("Game over")
        return False
    else:
        return True

def kol_vo_min(pole):
    # пробегаемся по всем клеткам поля
    
    s=0
    k=0
    for strok in pole:
        k=0
        for kletka in strok:
            m=0
            if pole[s][k]=="*":
                if s-1>0:
                    if pole[s-1][k]=="#":
                        m=m+1
                    if k-1>0:
                        if pole[s-1][k-1]=="#":
                            m=m+1
                    if k+1<len(pole):
                        if pole[s-1][k+1]=="#":
                            m=m+1
                if s+1<len(pole):
                    if pole[s+1][k]=="#":
                        m=m+1
                    if k+1<len(pole):
                        if pole[s+1][k+1]=="#":
                            m=m+1
                    if k-1>0:
                        if pole[s+1][k-1]=="#":
                            m=m+1
                if k-1>0:
                    if pole[s][k-1]=="#":
                        m=m+1
                if k+1<len(pole):
                    if pole[s][k+1]=="#":
                        m=m+1
                pole[s][k]=m
                if m==0:
                    pole[s][k]="*"
            k=k+1
        s=s+1
    
# добавим проверку, остались ли ещё неоткрытые элементы поля
# функция будет возвращать True, если больше нет
# и False, если ещё остались

def isOpen():
    # считаем, что поле открыто всё
    opened = True
    #для каждой строки в видимости поля
    for stroka in vidimost_polya:
        # если хотя бы в одной нашлось закрытое поле
        if "•" in stroka:
            # значит неправда, поле ещё не всё открыто
            opened = False
    return opened
