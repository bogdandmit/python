import random
from tkinter import *
window=Tk()
window.title("Сапер")
window.geometry('600x600')
# массив поля, * — пустое поле, # — стена
pole = [["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"],
        ["*","*","*","*","*","*","*","*","*","*","*","*"]]
c= Canvas(window, width=1000,height=1000,bg="red")
c.pack()
def mina():
    for i in range(30):
        pole[random.randint(0,11)][random.randint(0,11)]="#"



# то, что будет выводиться на экран
vidimost_polya=[["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"]]

# вывод поля на экран, для любого, абстрактного списка будет работать


def vyvodPolya(vidimost_polya):
    for g in vidimost_polya:
        for kletka in g:
            print(kletka,end='')
        print()
        
        
        
# проверка поля на то, что внутри него
# если поле пустое, проверяются все клетки вокруг него
# если стена — не проверяются
# если поле уже было открыто — оно не проверяется

            
            
def check(g,v):
    print(g)
    vidimost_polya[g][v]=pole[g][v]
    # если оно оказалось пустым
#    if pole[g][v] == "*":
        # клетка сверху
#         if g-1 > 0:
#             if pole[g-1][v] == "*":
#                 check(g-1,v)
#             # клетка сверху слева
#             '''
#             if v-1 > 0:
#                 if pole[g-1][v-1] == "*":
#                     check(g-1,v-1)
#             '''
#             # клетка сверху справа
#             if v+1 < len(pole):
#                 if pole[g-1][v+1] == "*":
#                     check(g-1,v+1)
#                     
#         # клетка снизу        
#         if g+1 < len(pole):
#             '''
#             if pole[g+1][v] == "*":
#                 check(g+1,v)
#                 
#             # клетка слева снизу
#             if v-1 > 0:
#                 if pole[g+1][v-1] == "*":
#                     check(g+1,v-1)
#                     '''
#             # клетка справа снизу
#             if v+1 < len(pole):
#                 if pole[g+1][v+1] == "*":
#                     check(g+1,v+1)
#                     '''
#         # клетка слева
#             if v-1 > 0:
#                 if pole[g][v-1] == "*":
#                     check(g,v-1)
#             # клетка справа
#             if v+1 < len(pole):
#                 if pole[g][v+1] == "*":
#                     check(g,v+1)
#                     '''

               
def kletki():
    g=0
    v=0
    for i in range(len (pole)):
        v=0
        for z in range(len(pole)):
#             print(g,v)
            button1=Button(c,text=vidimost_polya[g][v],command=lambda: check(g,v),width=6,height=3)
            button1.place(x=i*50,y=z*50)
            if v<11:
                v=v+1
        if g<11:
            g=g+1

def prov_min(g,v):
    if pole[g-1][v-1] == "#":
        print("Game over")
        return False
    else:
        return True

def kol_vo_min(pole):
    # пробегаемся по всем клеткам поля
    
    s=0
    k=0
    for strok in pole:
        k=0
        for kletka in strok:
            m=0
            if pole[s][k]=="*":
                if s-1>0:
                    if pole[s-1][k]=="#":
                        m=m+1
                    if k-1>0:
                        if pole[s-1][k-1]=="#":
                            m=m+1
                    if k+1<len(pole):
                        if pole[s-1][k+1]=="#":
                            m=m+1
                if s+1<len(pole):
                    if pole[s+1][k]=="#":
                        m=m+1
                    if k+1<len(pole):
                        if pole[s+1][k+1]=="#":
                            m=m+1
                    if k-1>0:
                        if pole[s+1][k-1]=="#":
                            m=m+1
                if k-1>0:
                    if pole[s][k-1]=="#":
                        m=m+1
                if k+1<len(pole):
                    if pole[s][k+1]=="#":
                        m=m+1
                pole[s][k]=m
                if m==0:
                    pole[s][k]="*"
            k=k+1
        s=s+1
    
# добавим проверку, остались ли ещё неоткрытые элементы поля
# функция будет возвращать True, если больше нет
# и False, если ещё остались

def isOpen():
    # считаем, что поле открыто всё
    opened = True
    #для каждой строки в видимости поля
    for g in vidimost_polya:
        # если хотя бы в одной нашлось закрытое поле
        if "•" in g:
            # значит неправда, поле ещё не всё открыто
            opened = False
    return opened
